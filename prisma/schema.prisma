// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userInfo  UserInfo?
  resumes   Resume[]
  sessions  RefreshToken[]
  resumeLogs ResumeLog[] @relation("RecruiterLogs")

  @@map("User")
}

model UserInfo {
  userInfosId Int      @id @default(autoincrement())
  userId      Int      @unique
  name        String
  role        Role     @default(APPLICANT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("UserInfos")
}

model RefreshToken {
  tokenId   Int      @id @default(autoincrement())
  userId    Int
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("RefreshTokens")
}

model Resume {
  resumeId     Int      @id @default(autoincrement())
  userId       Int
  title        String
  content      String   @db.Text
  resumeStatus ApplyStatus @default(APPLY)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)
  resumeLogs ResumeLog[]

  @@map("Resume")
}

model ResumeLog {
  resumeHistoryId Int      @id @default(autoincrement())
  resumeId        Int
  recruiterId     Int
  oldStatus       String
  newStatus       String
  reason          String
  changedAt       DateTime @default(now())

  resume Resume @relation(fields: [resumeId], references: [resumeId], onDelete: Cascade)
  recruiter User @relation("RecruiterLogs", fields: [recruiterId], references: [userId], onDelete: Cascade)

  @@map("ResumeLog")
}

enum Role {
  APPLICANT
  RECRUITER
}

enum ApplyStatus {
  APPLY
  DROP  
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
